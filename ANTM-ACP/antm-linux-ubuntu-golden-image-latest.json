{
  "variables": {
    "imageName": "antm-golden-linux-base",
    "templateVersion": "0.3.1",
    "associate_public_ip": "false",
    "ignore_tls": "false",
    "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
    "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
    "aws_session_token": "{{env `AWS_SESSION_TOKEN`}}",
    "amzn2_source_ami": "amzn2-ami-kernel-5.10-hvm-*-x86_64-gp2",
    "ubuntu_source_ami": "ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20231207",
    "rhel_source_ami": "RHEL-8.7.0_HVM-*-x86_64-0-Hourly2-GP2",
    "aws_region": "us-east-1",
    "cookbook_path": "./cookbooks/",
    "vpcId": "vpc-a0a38ed8",
    "subnetId": "subnet-3f685c5b",
    "source_cidr": "22.0.0.0/8",
    "site247Install": "",
    "site247Key": "",
    "root_volume_size": "40",
    "aws_accounts": null
  },
  "builders": [{
      "name": "amazon2",
      "insecure_skip_tls_verify": "{{user `ignore_tls`}}",
      "type": "amazon-ebs",
      "iam_instance_profile": "ANTM-AMI-Builder-EC2-Instance-Profile",
      "associate_public_ip_address": "{{user `associate_public_ip`}}",
      "region": "{{user `aws_region`}}",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "token": "{{user `aws_session_token`}}",
      "temporary_security_group_source_cidrs": [ "{{user `source_cidr`}}" ],
      "instance_type": "t2.large",
      "vpc_id": "{{user `vpcId` }}",
      "subnet_id": "{{user `subnetId`}}",
      "ena_support": true,
      "sriov_support": true,
      "ssh_username": "ec2-user",
      "source_ami_filter": {
        "filters": {
          "architecture": "x86_64",
          "virtualization-type": "hvm",
          "name": "{{user `amzn2_source_ami`}}",
          "root-device-type": "ebs",
          "state": "available"
        },
        "owners": ["137112412989"],
        "most_recent": true
      },
      "ami_name": "{{user `imageName`}}-amznlinux2-{{ user `templateVersion` }}-{{ isotime | clean_resource_name }}",
      "ami_description": "Created by AMI Builder",
      "encrypt_boot": false,
      "launch_block_device_mappings": [{
        "device_name": "/dev/xvda",
        "volume_size": "{{user `root_volume_size`}}",
        "volume_type": "gp3",
        "delete_on_termination": true
      }],
      "tags": {
        "ImageName": "{{user `imageName`}}-amznlinux2-{{ user `templateVersion` }}-{{ isotime | clean_resource_name }}",
        "BuildDate": "{{isotime}}",
        "TemplateVersion": "{{user `templateVersion`}}",
        "AMIType": "{{user `imageName`}}-amznlinux2",
        "CreatedBy": "AMIBuilder"
      },
      "snapshot_users": "{{user `aws_accounts`}}",
      "snapshot_tags": {
        "ImageName": "{{user `imageName`}}-amznlinux2-{{ user `templateVersion` }}-{{ isotime | clean_resource_name }}",
        "BuildDate": "{{isotime}}",
        "TemplateVersion": "{{user `templateVersion`}}",
        "AMIType": "{{user `imageName`}}-amznlinux2",
        "CreatedBy": "AMIBuilder"
      }
    },
    {
      "name": "rhel",
      "insecure_skip_tls_verify": "{{user `ignore_tls`}}",
      "type": "amazon-ebs",
      "iam_instance_profile": "ANTM-AMI-Builder-EC2-Instance-Profile",
      "associate_public_ip_address": "{{user `associate_public_ip`}}",
      "region": "{{user `aws_region`}}",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "token": "{{user `aws_session_token`}}",
      "temporary_security_group_source_cidrs": [ "{{user `source_cidr`}}" ],
      "instance_type": "t2.large",
      "vpc_id": "{{user `vpcId` }}",
      "subnet_id": "{{user `subnetId`}}",
      "ena_support": true,
      "sriov_support": true,
      "ssh_username": "ec2-user",
      "source_ami_filter": {
        "filters": {
          "architecture": "x86_64",
          "virtualization-type": "hvm",
          "name": "{{user `rhel_source_ami`}}",
          "root-device-type": "ebs",
          "state": "available"
        },
        "owners": ["309956199498"],
        "most_recent": true
      },
      "ami_name": "{{user `imageName`}}-rhel-8.7-{{ user `templateVersion` }}-{{ isotime | clean_resource_name }}",
      "ami_description": "Created by AMI Builder",
      "encrypt_boot": false,
      "launch_block_device_mappings": [{
          "device_name": "/dev/sda1",
          "volume_size": "{{user `root_volume_size`}}",
          "volume_type": "gp3",
          "delete_on_termination": true
        },
        {
          "device_name": "/dev/sda1",
          "volume_size": "{{user `root_volume_size`}}",
          "volume_type": "gp3",
          "delete_on_termination": true
        }
      ],
      "tags": {
        "ImageName": "{{user `imageName`}}-rhel-8.7-{{ user `templateVersion` }}-{{ isotime | clean_resource_name }}",
        "BuildDate": "{{isotime}}",
        "TemplateVersion": "{{user `templateVersion`}}",
        "AMIType": "{{user `imageName`}}-rhel-8.7",
        "CreatedBy": "AMIBuilder"
      },
      "snapshot_users": "{{user `aws_accounts`}}",
      "snapshot_tags": {
        "ImageName": "{{user `imageName`}}-rhel-8.7-{{ user `templateVersion` }}-{{ isotime | clean_resource_name }}",
        "BuildDate": "{{isotime}}",
        "TemplateVersion": "{{user `templateVersion`}}",
        "AMIType": "{{user `imageName`}}-rhel-8.7",
        "CreatedBy": "AMIBuilder"
      }
    },
    {
      "name": "ubuntu",
      "insecure_skip_tls_verify": "{{user `ignore_tls`}}",
      "type": "amazon-ebs",
      "iam_instance_profile": "ANTM-AMI-Builder-EC2-Instance-Profile",
      "associate_public_ip_address": "{{user `associate_public_ip`}}",
      "region": "{{user `aws_region`}}",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "token": "{{user `aws_session_token`}}",
      "temporary_security_group_source_cidrs": [ "{{user `source_cidr`}}" ],
      "instance_type": "t2.large",
      "vpc_id": "{{user `vpcId` }}",
      "subnet_id": "{{user `subnetId`}}",
      "ena_support": true,
      "sriov_support": true,
      "ssh_username": "ubuntu",
      "source_ami_filter": {
        "filters": {
          "architecture": "x86_64",
          "virtualization-type": "hvm",
          "name": "{{user `ubuntu_source_ami`}}",
          "root-device-type": "ebs",
          "state": "available"
        },
        "owners": ["099720109477"],
        "most_recent": true
      },
      "ami_name": "{{user `imageName`}}-ubuntu-{{ user `templateVersion` }}-{{ isotime | clean_resource_name }}",
      "ami_description": "Created by AMI Builder",
      "encrypt_boot": false,
      "launch_block_device_mappings": [{
        "device_name": "/dev/xvda",
        "volume_size": "{{user `root_volume_size`}}",
        "volume_type": "gp3",
        "delete_on_termination": true
      }],
      "tags": {
        "ImageName": "{{user `imageName`}}-ubuntu-{{ user `templateVersion` }}-{{ isotime | clean_resource_name }}",
        "BuildDate": "{{isotime}}",
        "TemplateVersion": "{{user `templateVersion`}}",
        "AMIType": "{{user `imageName`}}-ubuntu",
        "CreatedBy": "AMIBuilder"
      },
      "snapshot_users": "{{user `aws_accounts`}}",
      "snapshot_tags": {
        "ImageName": "{{user `imageName`}}-ubuntu-{{ user `templateVersion` }}-{{ isotime | clean_resource_name }}",
        "BuildDate": "{{isotime}}",
        "TemplateVersion": "{{user `templateVersion`}}",
        "AMIType": "{{user `imageName`}}-ubuntu",
        "CreatedBy": "AMIBuilder"
      }
    }
  ],
  "provisioners": [{
      "type": "shell",
      "inline": "sleep 60"
    },
    
    {
      "type": "shell",
      "inline": [
        "sudo apt install python38 -y",
        "sudo pip3 install --upgrade pip",
        "sudo pip3 install awscli --upgrade",
        "sudo apt install zip unzip -y"
      ],
      "only": [ "rhel" ]
    },
    {
        "type": "shell",
        "inline": [
          "sudo apt-get update -y",
          "sudo apt -y install unzip curl",
          "sudo apt install python3-pip -y",
          "sudo apt-get install openjdk-8-jre -y",
          "sudo apt-get install apache2 -y",
          "sudo pip3 install awscli",
          "sudo pip3 install ansible"
       ],
        "only": [ "ubuntu" ]
    },
    {
      "type": "shell",
      "inline": [
        "cd /tmp",
        "DD_AGENT_MAJOR_VERSION=7 DD_API_KEY=\"<DATADOG_API_KEY>\" bash -c \"$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script.sh)\"",
        "aws s3 cp s3://antm-cicd-ami-resources/codebuild-build-files/datadog.yaml ./",
        "sudo mv datadog.yaml /etc/datadog-agent/",
        "sudo systemctl restart datadog-agent",
        "aws s3 cp s3://antm-cicd-ami-resources/codebuild-build-files/QualysCloudAgent.deb ./",
        "sudo dpkg --install QualysCloudAgent.deb" ,
        "sudo /usr/local/qualys/cloud-agent/bin/qualys-cloud-agent.sh ActivationId=487e777b-cb6c-4f3d-9a53-ef3365cc1e73 CustomerId=9c0e25d2-ee8a-5af6-e040-10ac13043f6a",
        "cd /var/tmp",
        "aws s3 cp s3://antm-cicd-ami-resources/codebuild-build-files/flexera_amd64.zip ./",
        "sudo unzip flexera_amd64.zip",
        "sudo apt-get install /var/tmp/managesoft_21.0.0_amd64.deb",
        "aws s3 cp s3://antm-cicd-ami-resources/taniumclient_7.4.10.1034-ubuntu22_amd64.deb ./",
        "sudo dpkg -i taniumclient_7.4.10.1034-ubuntu22_amd64.deb",
        "sudo /opt/Tanium/TaniumClient/TaniumClient config set LogVerbosityLevel 1",
        "sudo systemctl start taniumclient;"
      ],
      "only": ["amazon2", "rhel","ubuntu"]
    },
    {
      "type": "shell",
      "inline": [
        "sudo pip3 install ansible"
      ],
      "only": ["rhel"]
    },
    {
      "type": "shell",
      "inline": [
        "cd /tmp",
        "aws s3 cp s3://antm-cicd-ami-resources/codebuild-build-files/AWS_ATM_SPL_DEFAULT.tar ./",
        "aws s3 cp s3://antm-cicd-ami-resources/codebuild-build-files/splunkforwarder-9.0.5-e9494146ae5c-Linux-x86_64.tgz ./",
        "ls -l"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo snap services amazon-ssm-agent",
        "sudo snap install amazon-ssm-agent --classic"     
      ],
      "only": ["rhel","ubuntu"]
    },
    {
      "type": "shell",
      "inline": [
        "echo rebooting",
        "sudo reboot"
      ],
        "expect_disconnect": true,
        "only":["amazon2"]
    },
    {
      "type": "shell",
      "inline": [
        "sudo package-cleanup --oldkernels --count=1 -y",
        "sudo apt update -y",
        "x=$(uname -rv);echo $x"
       ],
      "only": ["amazon2"]
    },
    {
      "type": "file",
      "source": "files/Host-Defender-Installation-boot.service",
      "destination": "/tmp/Host-Defender-Installation-boot.service"
     },
     {
      "type": "file",
      "source": "files/Host-Defender-Installation-boot",
      "destination": "/tmp/Host-Defender-Installation-boot"
      },
      {
      "type": "file",
      "source": "files/setup-hostdefender-boot.sh",
      "destination": "/tmp/setup-hostdefender-boot.sh"
      },
      {
        "type": "shell",
        "inline": [
          "sudo bash /tmp/setup-hostdefender-boot.sh"
         ],
        "only": ["amazon2", "rhel","ubuntu"]
      },
    {
      "type": "chef-solo",
      "cookbook_paths": ["cookbooks"],
      "execute_command": "{{if .Sudo}}sudo {{end}}chef-solo --chef-license accept-silent --no-color -c /tmp/packer-chef-solo/solo.rb -j /tmp/packer-chef-solo/node.json",
      "version": "16.13.16",
      "run_list": [
        "anthem_linux::default"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo pip install ansible"
      ],
      "only": ["amazon2"]
    },
    {
      "type": "shell",
      "inline": [
        "cd /tmp",
        "aws s3 cp s3://antm-cicd-ami-resources/codebuild-build-files/shell-scripts/TCS-Checks.sh ./",
        "sudo bash /tmp/TCS-Checks.sh"
      ]
      },
    {
      "type": "ansible-local",
      "playbook_file": "playbooks/certs-playbook.yml",
      "playbook_dir": "playbooks",
      "role_paths": [
        "playbooks/certs/roles/certs-install"
      ],
      "clean_staging_directory": true
    }
  ]
}